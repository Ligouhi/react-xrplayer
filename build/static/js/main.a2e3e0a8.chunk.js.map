{"version":3,"sources":["redux/basic.redux.js","controls/InnerViewControls.js","display/SpriteShapeHelper.js","const/PanoConst.js","effect/EffectInfoCard.jsx","effect/EffectImageCard.jsx","effect/EffectVideoPanel.jsx","effect/EffectControlPanel.jsx","effect/EffectContainer.jsx","display/loader/FBXLoader.js","display/loader/ObjLoader.js","display/CenterModelHelper.js","action/CameraMoveAction.js","action/ViewConvertHelper.js","utils/fullscreen.js","texture/TextureHelper.js","Player.js","reducer.js","store.js","webpack:///./src/index.js?b635","../example/src/index.js"],"names":["initialState","live_configure","InnerViewControls","camera","connect","isConnected","initSphericalData","disConnect","spherical","THREE","position","setFromCartesianCoords","x","y","z","phi","theta","distance","radius","lon","radToDeg","lat","initControlsListener","browser","window","navigator","userAgent","toLowerCase","indexOf","document","addEventListener","onTouchstart","onTouchmove","onTouchend","onDocumentMouseWheel","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentKeyDown","onDocumentKeyUp","update","dLon","dLat","onKeyShift","onKeyLeft","onKeyRight","onKeyUp","onKeyDown","updateCameraPosition","lookAt","target","Math","max","min","degToRad","sin","cos","event","pointerLockElement","preventDefault","console","log","isUserInteracting","onPointerDownPointerX","clientX","onPointerDownPointerY","clientY","onPointerDownLon","onPointerDownLat","movementX","movementY","targetTouches","length","touch","pageX","pageY","parseFloat","deltaY","innerView","keyCode","which","charCode","exitPointerLock","body","requestPointerLock","this","onMouseDownMouseX","onMouseDownMouseY","onMouseDownLon","onMouseDownLat","SpriteShapeHelper","scene","setPointList","list","pointList","initPoints","name","pointGroup","pointArr","forEach","point","createPoint","add","bindEvent","contertSph2Rect","createSpriteShape","url","opacity","scale","texture","load","needsUpdate","material","map","transparent","depthTest","mesh","set","getBackgroundTexture","color","canvas","createElement","getElementById","appendChild","width","height","ctx","getContext","fillStyle","arc","PI","fill","animatePoints","meshGroup","t","children","item","tweenA","TWEEN","Tween","to","delay","tweenB","chain","start","raycaster","mouse","innerWidth","innerHeight","setFromCamera","intersects","intersectObjects","objectClickHandler","push","EffectInfoCard","onCloseClickListener","e","props","onCloseClickHandler","className","iframeUrl","loading","allow","display","onClick","Component","EffectImageCard","onImageClickListenr","jumpUrl","open","imageUrl","src","alt","EffectVideoPanel","loadMp4Video","video","videoUrl","play","loadHlsVideo","HLS","hls","loadSource","attachMedia","on","MANIFEST_PARSED","alert","videoNode","loop","muted","setAttribute","endsWith","destroy","controls","ref","mount","EffectControlPanel","EffectContainer","state","infocard_visible","getEffect","data","type","showEffect","MyFBXLoader","loadObj","FBXLoader","objUrl","obj","translateY","startAnimation","loaded","ambient","remove","mixer","animationAction","clipAction","animations","stopAnimation","stop","delta","clock","getDelta","ObjLoader","geometry","center","CenterModelHelper","loader","getLoader","modeFormat","CameraMoveAction","endState","duration","init","coords","fov","tween","easing","Easing","Quadratic","Out","onUpdate","updateProjectionMatrix","onStart","onStartHandler","onComplete","onCompleteHandler","ViewConvertHelper","toNormalView","durtime","cameraMoveAction","toPlanetView","FullScreen","detectFullScreen","bind","fscreen","removeEventListener","handleProps","enabled","fullscreenElement","node","leaveFullScreen","enterFullScreen","onChange","fullscreenEnabled","requestFullscreen","exitFullscreen","style","undefined","defaultProps","TextureHelper","containerNode","initVideoNode","crossOrigin","getTextureFromVideo","minFilter","format","loadFlvVideo","resUrl","flvjs","isSupported","flvPlayer","createPlayer","videoLoader","attachMediaElement","error","onLoadErrorHandler","onLoadSuccessHandler","loadImage","unloadFlvVideo","unload","detachMediaElement","unloadHlsVideo","destory","Player","showingEffect","effectData","isFullScreen","initScene","clientWidth","clientHeight","renderer","antialias","initMesh","axisHelper","initEvent","onWindowResize","initspriteData","spriteData","Map","id","initDisplay","spriteShapeHelper","key","object","has","setState","get","centerModelHelper","initAction","viewConvertHelper","innerViewControls","aspect","setSize","initRenderer","setPixelRatio","devicePixelRatio","sortObjects","autoClear","domElement","animate","requestAnimationFrame","render","initControls","fetchLiveConfigure","removeChild","isFull","background","overflow","basic","channel_id","dispatch","axios","then","res","code","payload","liveConfigureAction","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","XRPlayer","ReactDOM"],"mappings":"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","file":"static/js/main.a2e3e0a8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// Action Types\r\nconst GET_LIVE_CONFIGURE = \"GET_LIVE_CONFIGURE\";\r\n\r\n// 初始state中的数据\r\nconst initialState = {\r\n    live_configure: \"\"\r\n}\r\n\r\n//reducer, 根据action对state进行处理，返回新的state\r\nexport function basic(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_LIVE_CONFIGURE:\r\n            return { ...state, live_configure: action.payload };\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//actionCreator， 创建action对象\r\nfunction liveConfigureAction(data) {\r\n    return {\r\n        payload: data,\r\n        type: GET_LIVE_CONFIGURE\r\n    }\r\n}\r\n\r\n//在组件中调用的dispatch action的函数\r\nexport function fetchLiveConfigure(channel_id) {\r\n    return dispatch => {\r\n        axios.get(`http://114.116.180.115:9000/channel/info/?lid=lc205`).then(res => {\r\n            let data = res.data;\r\n            if (data.code === 200) {\r\n                dispatch(liveConfigureAction(data.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n * 在球体中的全景视角控制\r\n * Three.js自带的Controls控制效果不理想，所以自己实现控制器\r\n */\r\nimport * as THREE from 'three';\r\n\r\nclass InnerViewControls {\r\n\r\n    constructor(camera) {\r\n        this.camera = camera;\r\n        this.isConnected = false;\r\n        this.isUserInteracting = false;     // 标记用户是否正在交互中\r\n        this.onMouseDownMouseX = 0;         // 鼠标点击的初始坐标x\r\n        this.onMouseDownMouseY = 0;         // 鼠标点击的初始坐标y\r\n        this.lon = 0;                       // 经度\r\n        this.onMouseDownLon = 0;\r\n        this.lat = 0;                       // 纬度\r\n        this.onMouseDownLat = 0;\r\n        this.phi = 0;\r\n        this.theta = 0;\r\n        this.distance = 10;\r\n        this.onPointerDownPointerX = 0;\r\n        this.onPointerDownPointerY = 0;\r\n        this.onPointerDownLon = 0;\r\n        this.onPointerDownLat = 0;\r\n\r\n        //键盘交互控件\r\n        this.onKeyLeft = false;\r\n        this.onKeyRight = false;\r\n        this.onKeyUp = false;\r\n        this.onKeyDown = false;\r\n        this.onKeyShift = false;\r\n\r\n        this.initControlsListener();\r\n    }\r\n\r\n    /**\r\n     * 相机与控制器连接，数据生效\r\n     */\r\n    connect = () => {\r\n        this.isConnected = true;\r\n        this.initSphericalData();\r\n    };\r\n\r\n    disConnect = () => {\r\n        this.isConnected = false;\r\n    }\r\n\r\n    // 将初始化的直角坐标转化为控制所需要的球体坐标数据\r\n    initSphericalData = () => {\r\n        const spherical = new THREE.Spherical();\r\n        const position = this.camera.position;\r\n        spherical.setFromCartesianCoords(position.x, position.y, position.z);\r\n        this.phi = spherical.phi;\r\n        this.theta = spherical.theta;\r\n        this.distance = spherical.radius;\r\n        this.lon = 90 - THREE.Math.radToDeg(this.theta);\r\n        this.lat = 90 - THREE.Math.radToDeg(this.phi);\r\n    }\r\n\r\n    initControlsListener = () => {\r\n        this.browser = window.navigator.userAgent.toLowerCase();\r\n        if (this.browser.indexOf('mobile') > 0) {\r\n            document.addEventListener('touchstart', this.onTouchstart, false);\r\n            document.addEventListener('touchmove', this.onTouchmove, false);\r\n            document.addEventListener('touchend', this.onTouchend, false);\r\n            document.addEventListener('wheel', this.onDocumentMouseWheel, false);\r\n        } else {\r\n            document.addEventListener('mousedown', this.onDocumentMouseDown, false);\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false);\r\n            document.addEventListener('mouseup', this.onDocumentMouseUp, false);\r\n            document.addEventListener('wheel', this.onDocumentMouseWheel, false);\r\n            //添加键盘监听\r\n            document.addEventListener('keydown', this.onDocumentKeyDown, false);\r\n            document.addEventListener('keyup', this.onDocumentKeyUp, false);\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        //键盘监听执行\r\n        var dLon = 2;\r\n        var dLat = 2;\r\n        if (this.onKeyShift) {\r\n            dLon = 10;\r\n            dLat = 10;\r\n        }\r\n        if (this.onKeyLeft) {\r\n            this.lon -= dLon;\r\n        }\r\n        if (this.onKeyRight) {\r\n            this.lon += dLon;\r\n        }\r\n        if (this.onKeyUp) {\r\n            this.lat -= dLat;\r\n        }\r\n        if (this.onKeyDown) {\r\n            this.lat += dLat;\r\n        }\r\n        if (this.isConnected) {\r\n            this.updateCameraPosition();\r\n        }\r\n        this.camera.lookAt(this.camera.target);\r\n    }\r\n\r\n    updateCameraPosition = () => {\r\n        this.lat = Math.max(- 85, Math.min(85, this.lat));\r\n        this.phi = THREE.Math.degToRad(90 - this.lat);\r\n        this.theta = THREE.Math.degToRad(this.lon);\r\n        // 球坐标系与直角坐标系的转换\r\n        this.camera.position.x = this.distance * Math.sin(this.phi) * Math.cos(this.theta);\r\n        this.camera.position.y = this.distance * Math.cos(this.phi);\r\n        this.camera.position.z = this.distance * Math.sin(this.phi) * Math.sin(this.theta);\r\n    }\r\n\r\n    onDocumentMouseDown = (event) => {\r\n        if (!!document.pointerLockElement) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        console.log('鼠标点击Down')\r\n        this.isUserInteracting = true;\r\n        // 记录鼠标点击屏幕坐标\r\n        this.onPointerDownPointerX = event.clientX;\r\n        this.onPointerDownPointerY = event.clientY;\r\n        // 记录点击时候经纬度\r\n        this.onPointerDownLon = this.lon; // 经度\r\n        this.onPointerDownLat = this.lat; // 纬度\r\n    }\r\n\r\n    onDocumentMouseMove = (event) => {\r\n        if (this.isUserInteracting === true) {\r\n            // 在鼠标Down位置叠加偏移量\r\n            this.lon = (this.onPointerDownPointerX - event.clientX) * 0.1 + this.onPointerDownLon;\r\n            this.lat = (this.onPointerDownPointerY - event.clientY) * 0.1 + this.onPointerDownLat;\r\n            // 用于立体场景音效\r\n            // mouseActionLocal([lon, lat]); \r\n        }\r\n        if (!!document.pointerLockElement) {\r\n            this.lon = event.movementX * 0.1 + this.lon;\r\n            this.lat = event.movementY * 0.1 + this.lat;\r\n        }\r\n    }\r\n\r\n    onDocumentMouseUp = (event) => {\r\n        this.isUserInteracting = false;\r\n    }\r\n\r\n    onTouchstart = (event) => {\r\n        if (event.targetTouches.length === 1) {\r\n            console.log('touch', 'start');\r\n            this.isUserInteracting = true;\r\n            // 记录滑动开始的坐标\r\n            var touch = event.targetTouches[0];\r\n            this.onPointerDownPointerX = touch.pageX; // 把元素放在手指所在的位置\r\n            this.onPointerDownPointerY = touch.pageY;\r\n            // 记录滑动开始时候的经纬度\r\n            this.onPointerDownLon = this.lon; // 经度\r\n            this.onPointerDownLat = this.lat; // 纬度\r\n        }\r\n    }\r\n\r\n    onTouchmove = (event) => {\r\n        if (this.isUserInteracting === true) {\r\n            var touch = event.targetTouches[0];\r\n            console.log('touching', touch.pageX);\r\n            this.lon = (parseFloat(this.onPointerDownPointerX) - touch.pageX) * 0.1 + this.onPointerDownLon;\r\n            this.lat = (parseFloat(this.onPointerDownPointerY - touch.pageY)) * 0.1 + this.onPointerDownLat;\r\n            // 用于立体场景音效\r\n            // mouseActionLocal([lon, lat]); \r\n        }\r\n    }\r\n\r\n    onTouchend = (event) => {\r\n        this.isUserInteracting = false;\r\n    }\r\n\r\n    onDocumentMouseWheel = (event) => {\r\n        this.distance += event.deltaY * 0.5;\r\n        if (this.distance <= 0) {\r\n            this.distance = 0;\r\n        } else if (this.distance > 0 && this.distance < 1000) {\r\n            if (!this.innerView) {\r\n                console.log('进来', this.camera.position.y)\r\n                this.innerView = true;\r\n            }\r\n        }\r\n        else if (this.distance >= 1000 && this.distance <= 1500) {\r\n            if (this.innerView) {\r\n                console.log('出来')\r\n                this.innerView = false;\r\n            }\r\n        }\r\n        else if (this.distance >= 1500) {\r\n            //this.distance = 1500;\r\n        }\r\n        console.log('distance', this.distance);\r\n\r\n    }\r\n\r\n    onDocumentKeyDown = (event) => {\r\n        event.preventDefault();\r\n        var keyCode = event.keyCode || event.which || event.charCode;\r\n        switch (keyCode) {\r\n\r\n            case 65: /*a*/\r\n            case 37: /*left*/ this.onKeyLeft = true; this.onKeyRight = false; break;\r\n\r\n            case 68: /*d*/\r\n            case 39: /*right*/ this.onKeyRight = true; this.onKeyLeft = false; break;\r\n\r\n            case 87: /*w*/\r\n            case 38: /*up*/ this.onKeyUp = true; this.onKeyDown = false; break;\r\n\r\n            case 83: /*s*/\r\n            case 40: /*down*/ this.onKeyDown = true; this.onKeyUp = false; break;\r\n\r\n            case 16: /*Shift*/ this.onKeyShift = true; break;\r\n\r\n            case 81: /*q*/\r\n                if (!!document.pointerLockElement) {\r\n                    document.exitPointerLock();\r\n                }\r\n                else {\r\n                    document.body.requestPointerLock();\r\n                    this.isUserInteracting = false;\r\n                }\r\n                break;\r\n\r\n            default: break;\r\n\r\n        }\r\n    }\r\n\r\n    onDocumentKeyUp = (event) => {\r\n        var keyCode = event.keyCode || event.which || event.charCode;\r\n        switch (keyCode) {\r\n\r\n            case 65: /*a*/\r\n            case 37: /*left*/ this.onKeyLeft = false; break;\r\n\r\n            case 68: /*d*/\r\n            case 39: /*right*/ this.onKeyRight = false; break;\r\n\r\n            case 87: /*w*/\r\n            case 38: /*up*/ this.onKeyUp = false; break;\r\n\r\n            case 83: /*s*/\r\n            case 40: /*down*/ this.onKeyDown = false; break;\r\n\r\n            case 16: /*L_Shift*/ this.onKeyShift = false; break;\r\n\r\n            default: break;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default InnerViewControls;","/**\r\n * 向3D场景中添加可以交互的热点标签或者按钮\r\n */\r\nimport * as THREE from 'three';\r\nimport { Radius } from '../const/PanoConst';\r\nimport TWEEN from '@tweenjs/tween.js';\r\n\r\nclass SpriteShapeHelper {\r\n\r\n    constructor(scene, camera) {\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.pointList = [];\r\n        this.pointGroup = null;\r\n\r\n        this.objectClickHandler = null;\r\n    }\r\n\r\n    setPointList = (list) => {\r\n        this.pointList = list;\r\n        this.initPoints();\r\n    }\r\n\r\n    initPoints = () => {\r\n        this.pointList = [\r\n            {\r\n                phi: -90,\r\n                theta: -10,\r\n                name: 'infocard',\r\n            },\r\n            {\r\n                phi: 32,\r\n                theta: 14,\r\n                name: 'image',\r\n            },\r\n            {\r\n                phi: -153,\r\n                theta: -44,\r\n                name: 'video',\r\n            },\r\n            {\r\n                phi: 67,\r\n                theta: 19,\r\n                name: 'control',\r\n            },\r\n            {\r\n                phi: 58,\r\n                theta: -9,\r\n                name: 'touguasongzi',\r\n            },\r\n        ];\r\n\r\n        this.pointGroup = new THREE.Group();\r\n        this.pointArr = [];\r\n        this.pointList.forEach((point) => {\r\n            this.createPoint(point)\r\n        });\r\n        this.scene.add(this.pointGroup);\r\n        this.bindEvent();\r\n    }\r\n\r\n    contertSph2Rect = (phi, theta) => {\r\n        let r = Radius;\r\n        return [\r\n            r * Math.sin(THREE.Math.degToRad(phi)) * Math.cos(THREE.Math.degToRad(theta)),\r\n            r * Math.sin(THREE.Math.degToRad(phi)) * Math.sin(THREE.Math.degToRad(theta)),\r\n            r * Math.cos(THREE.Math.degToRad(phi))\r\n        ];\r\n    }\r\n\r\n    createPoint(point) {\r\n        let position = this.contertSph2Rect(point.phi, point.theta);\r\n        let meshGroup = new THREE.Group();\r\n        meshGroup.name = point.name;\r\n        meshGroup.position.set(...position);\r\n\r\n        let mesh = this.createSpriteShape(\"hotspot_video.png\", 1, 16);\r\n        meshGroup.add(mesh);\r\n        mesh = this.getBackgroundTexture('#2d2d2d', 0.2, 20);\r\n        meshGroup.add(mesh);\r\n        this.pointArr.push(mesh);\r\n        mesh.name = point.name;\r\n        this.pointGroup.add(meshGroup);\r\n        this.animatePoints(meshGroup);\r\n    }\r\n\r\n    createSpriteShape = (url, opacity, scale) => {\r\n        let texture = new THREE.TextureLoader().load(url);\r\n        texture.needsUpdate = true; //注意这句不能少\r\n        let material = new THREE.SpriteMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            opacity: opacity,\r\n            depthTest: false\r\n        });\r\n        let mesh = new THREE.Sprite(material);\r\n        mesh.scale.set(scale * 2, scale * 2, 1);\r\n        return mesh;\r\n    }\r\n\r\n    getBackgroundTexture = (color, opacity, scale) => {\r\n        let canvas = document.createElement(\"canvas\");\r\n        const container = document.getElementById('display')\r\n        container.appendChild(canvas);\r\n        canvas.width = 128;\r\n        canvas.height = 128;\r\n        let ctx = canvas.getContext(\"2d\");\r\n        ctx.fillStyle = color;\r\n        ctx.arc(64, 64, 64, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        let texture = new THREE.Texture(canvas);\r\n        texture.needsUpdate = true; //注意这句不能少\r\n        let material = new THREE.SpriteMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            opacity: opacity,\r\n            depthTest: false\r\n        });\r\n        let mesh = new THREE.Sprite(material);\r\n        mesh.scale.set(scale * 2, scale * 2, 1);\r\n        return mesh;\r\n    }\r\n\r\n    animatePoints = (meshGroup) => {\r\n        let t = 300;\r\n        meshGroup.children.forEach(item => {\r\n            let scale = item.scale;\r\n            let tweenA = new TWEEN.Tween(scale)\r\n                .to({ x: scale.x * 0.8, y: scale.y * 0.8 }, 500)\r\n                .delay(100)\r\n            let tweenB = new TWEEN.Tween(scale)\r\n                .to({ x: scale.x * 1.2, y: scale.y * 1.2 }, 500)\r\n                .delay(100)\r\n            tweenA.chain(tweenB);\r\n            tweenB.chain(tweenA);\r\n            tweenA.start(t = t + 100);\r\n        })\r\n    }\r\n\r\n    update = () => {\r\n        TWEEN.update();\r\n    }\r\n\r\n    bindEvent = () => {\r\n        let raycaster = new THREE.Raycaster();\r\n        document.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            let mouse = new THREE.Vector2();\r\n            //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n            mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n            // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n            raycaster.setFromCamera(mouse, this.camera);\r\n            // 获取raycaster直线和所有模型相交的数组集合\r\n            var intersects = raycaster.intersectObjects(this.pointArr);\r\n            //如果只需要将第一个触发事件，那就取数组的第一个模型\r\n            if (intersects.length > 0) {\r\n                //this.showModal(intersects[0].object.name)\r\n                if (this.objectClickHandler) {\r\n                    this.objectClickHandler(intersects);\r\n                }\r\n            }\r\n        }, true);\r\n    }\r\n}\r\n\r\nexport default SpriteShapeHelper;","/**\r\n * 全景球体的半径\r\n */\r\nexport const Radius = 500; ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Iframe from 'react-iframe'\r\nimport '../style/EffectInfoCard.less';\r\n\r\nclass EffectInfoCard extends Component {\r\n\r\n    onCloseClickListener = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCloseClickHandler) {\r\n            this.props.onCloseClickHandler();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overlay\">\r\n                <Iframe\r\n                    url={this.props.iframeUrl}\r\n                    className=\"iframe\"\r\n                    loading='true'\r\n                    allow=\"fullscreen\"\r\n                    display=\"initial\" />\r\n\r\n                <div\r\n                    className=\"close\"\r\n                    onClick={this.onCloseClickListener}\r\n                ></div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nEffectInfoCard.propTypes = {\r\n    onCloseClickHandler: PropTypes.func.isRequired,\r\n    iframeUrl: PropTypes.string.isRequired\r\n};\r\n\r\nexport default EffectInfoCard;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/EffectImageCard.less';\r\n\r\nclass EffectImageCard extends Component {\r\n\r\n    onCloseClickListener = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCloseClickHandler) {\r\n            this.props.onCloseClickHandler();\r\n        }\r\n    }\r\n\r\n    onImageClickListenr = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.jumpUrl) {\r\n            window.open(this.props.jumpUrl, '_blank');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('imageurl', this.props.imageUrl);\r\n        return (\r\n            <div className=\"overlay\">\r\n                <div className=\"container\">\r\n                    <img\r\n                        className=\"image\"\r\n                        onClick={this.onImageClickListenr}\r\n                        src={this.props.imageUrl}\r\n                        alt=\"\"></img>\r\n                </div>\r\n                <div\r\n                    className=\"close\"\r\n                    onClick={this.onCloseClickListener}\r\n                ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEffectImageCard.propTypes = {\r\n    onCloseClickHandler: PropTypes.func.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    jumpUrl: PropTypes.string,\r\n};\r\n\r\nexport default EffectImageCard;\r\n\r\n","/**\r\n * 弹窗视频效果\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/EffectVideoPanel.less';\r\nimport * as HLS from 'hls.js';\r\n\r\n\r\nclass EffectVideoPanel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.hls = null;\r\n        this.video = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hls = new HLS();\r\n        this.video = this.videoNode;\r\n        this.video.loop = true;\r\n        this.video.muted = true;\r\n        console.log('videoUrl', this.props.videoUrl);\r\n        this.video.setAttribute('webkit-playsinline', 'webkit-playsinline');\r\n        const videoUrl = this.props.videoUrl;\r\n        if (videoUrl.endsWith('.mp4')) {\r\n            this.loadMp4Video();\r\n        } else if (videoUrl.endsWith('.m3u8')) {\r\n            this.loadHlsVideo();\r\n        }\r\n\r\n    }\r\n\r\n    loadMp4Video = () => {\r\n        this.video.src = this.props.videoUrl;\r\n        this.video.play();\r\n    }\r\n\r\n    loadHlsVideo = () => {\r\n        if (HLS.isSupported()) {\r\n            console.log('hls', 'support');\r\n            this.hls.loadSource(this.props.videoUrl);\r\n            this.hls.attachMedia(this.video);\r\n            this.hls.on(HLS.Events.MANIFEST_PARSED, () => {\r\n                this.video.play();\r\n                console.log('videoplay');\r\n            });\r\n        } else {\r\n            console.log('设备不支持')\r\n            alert(\"设备不支持\");\r\n        }\r\n    }\r\n\r\n    onCloseClickListener = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCloseClickHandler) {\r\n            this.props.onCloseClickHandler();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.hls.destroy();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overlay\">\r\n\r\n                <div className=\"container \">\r\n                    <video\r\n                        className=\"video\"\r\n                        controls\r\n                        ref={(mount) => { this.videoNode = mount }}\r\n                    ></video>\r\n                </div>\r\n                <div\r\n                    className=\"close\"\r\n                    onClick={this.onCloseClickListener}\r\n                ></div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nEffectVideoPanel.propTypes = {\r\n    onCloseClickHandler: PropTypes.func.isRequired,\r\n    videoUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default EffectVideoPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/EffectControlPanel.less';\r\n\r\nclass EffectControlPanel extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    onCloseClickListener = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCloseClickHandler) {\r\n            this.props.onCloseClickHandler();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overlay\">\r\n                <div className=\"control-container \">\r\n\r\n                    <button>控制面板</button>\r\n                </div>\r\n                <div\r\n                    className=\"close\"\r\n                    onClick={this.onCloseClickListener}\r\n                ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEffectControlPanel.propTypes = {\r\n    onCloseClickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EffectControlPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EffectInfoCard from './EffectInfoCard';\r\nimport EffectImageCard from './EffectImageCard';\r\nimport EffectVideoPanel from './EffectVideoPanel';\r\nimport EffectControlPanel from './EffectControlPanel';\r\n\r\nclass EffectContainer extends Component {\r\n\r\n    state = {\r\n        infocard_visible: false\r\n    }\r\n\r\n    getEffect = (data) => {\r\n        if (!data) {\r\n            return \"\";\r\n        }\r\n        if (data.type === 'infocard') {\r\n            return (\r\n                <EffectInfoCard\r\n                    onCloseClickHandler={() => {\r\n                        this.props.onCloseClickHandler && this.props.onCloseClickHandler();\r\n                    }}\r\n                    iframeUrl={data.iframeUrl}\r\n                ></EffectInfoCard>\r\n            )\r\n        } else if (data.type === 'image') {\r\n            return (\r\n                <EffectImageCard\r\n                    onCloseClickHandler={() => {\r\n                        this.props.onCloseClickHandler && this.props.onCloseClickHandler();\r\n                    }}\r\n                    imageUrl={data.imageUrl}\r\n                    jumpUrl={data.jumpUrl}\r\n                ></EffectImageCard>\r\n            )\r\n        } else if (data.type === 'video') {\r\n            return (\r\n                <EffectVideoPanel\r\n                    onCloseClickHandler={() => {\r\n                        this.props.onCloseClickHandler && this.props.onCloseClickHandler();\r\n                    }}\r\n                    videoUrl={data.videoUrl}\r\n                ></EffectVideoPanel>\r\n            )\r\n        } else if (data.type === 'control') {\r\n            return (\r\n                <EffectControlPanel\r\n                    onCloseClickHandler={() => {\r\n                        this.props.onCloseClickHandler && this.props.onCloseClickHandler();\r\n                    }}\r\n                ></EffectControlPanel>\r\n            )\r\n        }\r\n        else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const showEffect = this.getEffect(this.props.data);\r\n        return (\r\n            <div >\r\n                {\r\n                    showEffect\r\n                }\r\n            </div>)\r\n    }\r\n}\r\n\r\nEffectContainer.propTypes = {\r\n    data: PropTypes.object,\r\n    onCloseClickHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default EffectContainer;\r\n\r\n","import * as THREE from 'three';\r\nimport FBXLoader from 'three-fbxloader-offical';\r\n\r\n\r\nclass MyFBXLoader {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.mixer = null;  //混合器\r\n        this.obj = null;\r\n        this.animationAction = null;\r\n        this.clock = new THREE.Clock();\r\n    }\r\n\r\n    loadObj = (data) => {\r\n        var loader = new FBXLoader(); //创建一个FBX加载器\r\n        loader.load(data.objUrl,\r\n            (obj) => {\r\n                this.obj = obj;\r\n                this.display();\r\n                console.log('load fbxobj success:', this.obj);\r\n                this.obj.translateY(-80);\r\n                this.startAnimation();\r\n            },\r\n            (data) => {\r\n                console.log('load fbx obj', data.loaded);\r\n            },\r\n            (e) => {\r\n                console.log('load fbxobj error:', e);\r\n            });\r\n    }\r\n\r\n    display = () => {\r\n        this.scene.add(this.obj);\r\n        var ambient = new THREE.AmbientLight(0xffffff);\r\n        this.scene.add(ambient);\r\n    }\r\n\r\n    remove = () => {\r\n        this.scene.remove(this.obj);\r\n        this.mixer = null;\r\n        this.animationAction = null;\r\n    }\r\n\r\n    startAnimation = () => {\r\n        this.mixer = new THREE.AnimationMixer(this.obj);\r\n        this.animationAction = this.mixer.clipAction(this.obj.animations[0]);\r\n        this.animationAction.play();\r\n    }\r\n\r\n    stopAnimation = () => {\r\n        this.animationAction && this.animationAction.stop();\r\n    }\r\n\r\n    update = () => {\r\n        if (this.mixer) {\r\n            const delta = this.clock.getDelta()  //方法获得两帧的时间间隔\r\n            this.mixer.update(delta);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MyFBXLoader;","import * as THREE from 'three';\r\n\r\nclass ObjLoader {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.obj = null;\r\n        this.data = null;\r\n    }\r\n\r\n    loadObj = (data) => {\r\n        this.data = data;\r\n        var loader = new THREE.ObjectLoader();\r\n        loader.load(data.objUrl,\r\n            (obj) => {\r\n                this.obj = obj;\r\n                var texture = new THREE.TextureLoader().load(data.texture);\r\n                obj.material = new THREE.MeshBasicMaterial({\r\n                    map: texture,\r\n                });\r\n                this.scene.add(obj);\r\n                obj.scale.set(data.scale, data.scale, data.scale);//网格模型缩放\r\n                obj.geometry.center();//几何体居中\r\n            },\r\n            (data) => { console.log('loading json obj', data.loaded); },\r\n            (e) => { console.log('err', e); }\r\n        )\r\n    }\r\n\r\n    display = () => {\r\n        this.scene.add(this.obj);\r\n    }\r\n\r\n    remove = () => {\r\n        this.scene.remove(this.obj);\r\n        this.mixer = null;\r\n        this.animationAction = null;\r\n    }\r\n}\r\n\r\nexport default ObjLoader;","/**\r\n * 支持向全景场景中心加入可以360°观看的3D模型\r\n */\r\nimport FBXLoader from './loader/FBXLoader';\r\nimport ObjLoader from './loader/ObjLoader';\r\n\r\nclass CenterModelHelper {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.loader = null;\r\n        this.data = null;\r\n    }\r\n\r\n    loadObj = (data) => {\r\n        this.data = data;\r\n        this.loader = this.getLoader(data);\r\n        this.loader.loadObj(data);\r\n    }\r\n\r\n    display = () => {\r\n        if (!this.loader) return;\r\n        this.loader.display();\r\n    }\r\n\r\n    remove = () => {\r\n        if (!this.loader) return;\r\n        this.loader.remove();\r\n    }\r\n\r\n    startAnimation = () => {\r\n        if (!this.loader) return;\r\n        if (this.data.modeFormat === 'fbx') {\r\n            this.loader.startAnimation();\r\n        }\r\n    }\r\n\r\n    stopAnimation = () => {\r\n        if (!this.loader) return;\r\n        if (this.data.modeFormat === 'fbx') {\r\n            this.loader.stopAnimation();\r\n        }\r\n    }\r\n\r\n    getLoader = (data) => {\r\n        switch (data.modeFormat) {\r\n            case 'fbx':\r\n                return new FBXLoader(this.scene);\r\n            case 'obj':\r\n                return new ObjLoader(this.scene);\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        if (!this.loader) return;\r\n        if (this.data.modeFormat === 'fbx') {\r\n            this.loader.update();\r\n        }\r\n    }\r\n}\r\n\r\nexport default CenterModelHelper;","/**\r\n * 控制全景相机的入场和出场\r\n */\r\nimport TWEEN from '@tweenjs/tween.js';\r\n\r\n\r\nclass CameraMoveAction {\r\n\r\n    constructor(camera, endState, duration = 5000, delay = 1000) {\r\n        this.camera = camera;\r\n        this.tween = null;\r\n        this.onCompleteHandler = null;\r\n        this.onStartHandler = null;\r\n        this.init(endState, duration, delay);\r\n    }\r\n\r\n    init = (endState, duration = 5000, delay = 1000) => {\r\n        const coords = { // Start \r\n            x: this.camera.position.x,\r\n            y: this.camera.position.y,\r\n            z: this.camera.position.z,\r\n            fov: this.camera.fov\r\n        };\r\n        this.tween = new TWEEN.Tween(coords)\r\n            .to({\r\n                x: endState.x,\r\n                y: endState.y,\r\n                z: endState.z,\r\n                fov: endState.fov\r\n            }, duration)\r\n            .delay(delay)\r\n            .easing(TWEEN.Easing.Quadratic.Out)\r\n            .onUpdate(() => {\r\n                this.camera.position.x = coords.x;\r\n                this.camera.position.y = coords.y;\r\n                this.camera.position.z = coords.z;\r\n                this.camera.fov = coords.fov;\r\n                this.camera.updateProjectionMatrix();\r\n            })\r\n            .onStart(() => {\r\n                this.onStartHandler && this.onStartHandler();\r\n            })\r\n            .onComplete(() => {\r\n                this.onCompleteHandler && this.onCompleteHandler();\r\n            });\r\n    }\r\n\r\n    start = () => {\r\n        if (this.tween) {\r\n            this.tween.start();\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        TWEEN.update();\r\n    }\r\n}\r\n\r\nexport default CameraMoveAction;","/**\r\n * 实现小行星和普通视野等效果的切换\r\n */\r\n\r\nimport CameraMoveAction from './CameraMoveAction';\r\n\r\nclass ViewConvertHelper {\r\n\r\n    constructor(camera, controls) {\r\n        this.camera = camera;\r\n        this.state = null;\r\n        this.controls = controls;\r\n        this.cameraMoveAction = null;\r\n        this.onCompleteHandler = null;\r\n        this.onStartHandler = null;\r\n    }\r\n\r\n    toNormalView = (durtime = 8000, delay = 0) => {\r\n        if (this.state && this.state === 'normal') return;\r\n        this.cameraMoveAction = new CameraMoveAction(this.camera,\r\n            { x: 0, y: 0, z: 100, fov: 80 }, durtime, delay);\r\n        this.cameraMoveAction.onStartHandler = () => {\r\n            this.controls && this.controls.disConnect();\r\n        }\r\n        this.cameraMoveAction.onCompleteHandler = () => {\r\n            this.controls && this.controls.connect();\r\n            this.state = 'planet';\r\n        }\r\n        this.cameraMoveAction.start();\r\n    }\r\n\r\n    toPlanetView = (durtime = 8000, delay = 0) => {\r\n        if (this.state && this.state === 'planet') return;\r\n        this.cameraMoveAction = new CameraMoveAction(this.camera,\r\n            { x: 0, y: 450, z: 0, fov: 150 }, durtime, delay);\r\n        this.cameraMoveAction.onStartHandler = () => {\r\n            this.controls && this.controls.disConnect();\r\n        }\r\n        this.cameraMoveAction.onCompleteHandler = () => {\r\n            this.controls && this.controls.connect();\r\n            this.state = 'planet';\r\n        }\r\n        this.cameraMoveAction.start();\r\n    }\r\n\r\n}\r\n\r\nexport default ViewConvertHelper;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport fscreen from \"fscreen\";\r\n\r\nclass FullScreen extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.node.isRequired,\r\n        enabled: PropTypes.bool.isRequired,\r\n        onChange: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        enabled: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detectFullScreen = this.detectFullScreen.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fscreen.addEventListener(\"fullscreenchange\", this.detectFullScreen);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        fscreen.removeEventListener(\"fullscreenchange\", this.detectFullScreen);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleProps(this.props);\r\n    }\r\n\r\n    handleProps(props) {\r\n        const enabled = fscreen.fullscreenElement === this.node;\r\n        if (enabled && !props.enabled) {\r\n            this.leaveFullScreen();\r\n        } else if (!enabled && props.enabled) {\r\n            this.enterFullScreen();\r\n        }\r\n    }\r\n\r\n    detectFullScreen() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(fscreen.fullscreenElement === this.node);\r\n        }\r\n    }\r\n\r\n    enterFullScreen() {\r\n        if (fscreen.fullscreenEnabled) {\r\n            fscreen.requestFullscreen(this.node);\r\n        }\r\n    }\r\n\r\n    leaveFullScreen() {\r\n        if (fscreen.fullscreenEnabled) {\r\n            fscreen.exitFullscreen();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const className = [\"fullscreen\"];\r\n        if (this.props.enabled) {\r\n            className.push(\"fullscreen-enabled\");\r\n        }\r\n        console.log('fullscreen', this.props.enabled);\r\n\r\n        return (\r\n            <div\r\n                //className={className.join(\" \")}\r\n                ref={node => (this.node = node)}\r\n                style={\r\n                    this.props.enabled ? { height: \"100%\", width: \"100%\" } : undefined\r\n                }\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullScreen;","/**\r\n * 负责加载纹理资源\r\n * 支持：全景图片，全景视频（flv，hls，mp4格式）\r\n */\r\nimport * as HLS from 'hls.js';\r\nimport * as THREE from 'three';\r\nimport flvjs from 'flv.js/dist/flv.min.js';\r\n\r\nclass TextureHelper {\r\n\r\n    /**\r\n     * @param {video或者图片的载体} containerNode \r\n     * @param {加载资源的属性集合} resProps \r\n     */\r\n    constructor(containerNode) {\r\n        this.containerNode = containerNode;\r\n        this.onLoadSuccessHandler = null;\r\n        this.onLoadErrorHandler = null;\r\n        this.videoLoader = null;\r\n    }\r\n\r\n    initVideoNode = () => {\r\n        this.containerNode.width = 0;\r\n        this.containerNode.height = 0;\r\n        this.containerNode.loop = true;\r\n        this.containerNode.muted = true;\r\n        this.containerNode.crossOrigin = \"anonymous\"\r\n        this.containerNode.setAttribute('webkit-playsinline', 'webkit-playsinline');\r\n    }\r\n\r\n    getTextureFromVideo = (video) => {\r\n        let texture = new THREE.VideoTexture(video);\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.format = THREE.RGBFormat;\r\n        return texture;\r\n    }\r\n\r\n    loadFlvVideo = (resUrl) => {\r\n        this.initVideoNode();\r\n        if (flvjs.isSupported()) {\r\n            let flvPlayer = flvjs.createPlayer({ type: 'flv', url: resUrl });\r\n            this.videoLoader = flvPlayer;\r\n            flvPlayer.attachMediaElement(this.containerNode);\r\n            flvPlayer.load();\r\n            flvPlayer.play();\r\n        } else {\r\n            console.error('Your browser does not support flvjs')\r\n            this.onLoadErrorHandler('设备不支持FLV');\r\n        }\r\n        return this.getTextureFromVideo(this.containerNode);\r\n    }\r\n\r\n    loadHlsVideo = (resUrl) => {\r\n        this.initVideoNode();\r\n        if (HLS.isSupported()) {\r\n            var hls = new HLS();\r\n            this.videoLoader = hls;\r\n            hls.loadSource(resUrl);\r\n            hls.attachMedia(this.containerNode);\r\n            hls.on(HLS.Events.MANIFEST_PARSED, () => {\r\n                this.containerNode.play();\r\n                this.onLoadSuccessHandler();\r\n            });\r\n        } else {\r\n            console.log('设备不支持HLS')\r\n            this.onLoadErrorHandler('设备不支持HLS');\r\n        }\r\n        return this.getTextureFromVideo(this.containerNode);\r\n    }\r\n\r\n    loadMp4Video = (resUrl) => {\r\n        this.initVideoNode();\r\n        this.containerNode.src = resUrl;\r\n        this.containerNode.load();\r\n        this.containerNode.play();\r\n        return this.getTextureFromVideo(this.containerNode);\r\n    }\r\n\r\n    loadImage = (resUrl) => {\r\n        var texture = new THREE.TextureLoader().load(resUrl);\r\n        return texture;\r\n    }\r\n\r\n    unloadFlvVideo = () => {\r\n        if (this.videoLoader) {\r\n            this.videoLoader.unload();\r\n            this.videoLoader.detachMediaElement();\r\n        }\r\n    }\r\n\r\n    unloadHlsVideo = () => {\r\n        if (this.videoLoader) {\r\n            this.videoLoader.destory();\r\n        }\r\n    }\r\n}\r\n\r\nexport default TextureHelper;","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { connect } from 'react-redux'\r\nimport { fetchLiveConfigure } from './redux/basic.redux';\r\nimport InnerViewControls from './controls/InnerViewControls';\r\nimport SpriteShapeHelper from './display/SpriteShapeHelper';\r\nimport EffectContainer from './effect/EffectContainer';\r\nimport './App.css';\r\nimport CenterModelHelper from './display/CenterModelHelper';\r\nimport TWEEN from '@tweenjs/tween.js';\r\nimport ViewConvertHelper from './action/ViewConvertHelper';\r\nimport FullScreen from './utils/fullscreen';\r\nimport TextureHelper from './texture/TextureHelper';\r\n\r\nclass Player extends Component {\r\n\r\n  state = {\r\n    showingEffect: false,\r\n    effectData: null,\r\n    isFullScreen: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.mount = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n    this.renderer = null;\r\n    this.controls = null;\r\n    this.videoNode = null;\r\n\r\n    this.innerView = true; // 是否是内视角\r\n    this.innerViewControls = null;\r\n    this.spriteShapeHelper = null;\r\n    this.centerModelHelper = null;\r\n    this.viewConvertHelper = null;\r\n    this.spriteData = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initScene();\r\n    this.initMesh();\r\n    this.initEvent();\r\n    this.initControls();\r\n    this.animate();\r\n    this.initDisplay();\r\n    this.initRenderer();\r\n    this.initAction();\r\n    //TODO test redux \r\n    this.props.fetchLiveConfigure();\r\n  }\r\n\r\n  initScene = () => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      150, this.mount.clientWidth / this.mount.clientHeight, 0.001, 10000);\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer = renderer;\r\n    camera.position.set(0, 450, 0);\r\n    camera.target = new THREE.Vector3(0, 0, 0);\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n  }\r\n\r\n  initMesh = () => {\r\n    let geometry = new THREE.SphereGeometry(500, 60, 40); // 球体\r\n    geometry.scale(-1, 1, 1);\r\n    var video = this.videoNode;\r\n    this.video = video;\r\n    const textureHelper = new TextureHelper(video);\r\n    let hlsUrl = \"http://cache.utovr.com/s1e3tzoku70yk8mpa3/L3_5dxsrk4kh56gc4l1_v2.m3u8\";\r\n    var texture = textureHelper.loadHlsVideo(hlsUrl);\r\n    var material = new THREE.MeshBasicMaterial({ map: texture });\r\n    // 创建网格 = 几何体 + 材质\r\n    let mesh = new THREE.Mesh(geometry, material);\r\n    // 创建场景，并添加mesh\r\n    this.scene = new THREE.Scene();\r\n    this.scene.add(mesh);\r\n    var axisHelper = new THREE.AxesHelper(1000)//每个轴的长度\r\n    this.scene.add(axisHelper);\r\n  }\r\n\r\n  initEvent = () => {\r\n    window.addEventListener('resize', this.onWindowResize, false);\r\n  }\r\n\r\n  initspriteData = () => {\r\n    this.spriteData = new Map();\r\n    this.spriteData.set('infocard', {\r\n      id: 'infocard',\r\n      type: 'infocard',\r\n      iframeUrl: \"https://gs.ctrip.com/html5/you/place/14.html\"\r\n    });\r\n    this.spriteData.set('image', {\r\n      id: 'image',\r\n      type: 'image',\r\n      imageUrl: \"https://pic-cloud-bupt.oss-cn-beijing.aliyuncs.com/5c882ee6443a5.jpg\",\r\n      jumpUrl: 'http://www.youmuvideo.com',\r\n    });\r\n    this.spriteData.set('video', {\r\n      id: 'video',\r\n      type: 'video',\r\n      videoUrl: 'https://video-cloud-bupt.oss-cn-beijing.aliyuncs.com/hangzhou.mp4'\r\n    });\r\n    this.spriteData.set('control', {\r\n      id: 'control',\r\n      type: 'control',\r\n    });\r\n  }\r\n\r\n  initDisplay = () => {\r\n    this.initspriteData();\r\n    this.spriteShapeHelper = new SpriteShapeHelper(this.scene, this.camera);\r\n    this.spriteShapeHelper.initPoints();\r\n    this.spriteShapeHelper.objectClickHandler = (intersects) => {\r\n      const key = intersects[0].object.name;\r\n      if (this.spriteData.has(key)) {\r\n        this.setState({\r\n          showingEffect: true,\r\n          effectData: this.spriteData.get(key)\r\n        });\r\n      }\r\n      console.log(intersects[0].object.name);\r\n    }\r\n\r\n    this.centerModelHelper = new CenterModelHelper(this.scene);\r\n    // this.centerModelHelper.loadObj({\r\n    //   objUrl: \"model.json\",\r\n    //   texture: \"texture1.png\",\r\n    //   modeFormat: \"obj\",\r\n    //   scale: 1\r\n    // });\r\n    this.centerModelHelper.loadObj({\r\n      objUrl: \"SambaDancing.fbx\",\r\n      texture: \"texture1.png\",\r\n      modeFormat: \"fbx\",\r\n      scale: 1\r\n    });\r\n  }\r\n\r\n  initAction = () => {\r\n    this.viewConvertHelper = new ViewConvertHelper(this.camera, this.innerViewControls);\r\n    this.viewConvertHelper.toNormalView(8000, 2000);\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  initRenderer = () => {\r\n    const renderer = this.renderer;\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.sortObjects = false;\r\n    renderer.autoClear = false;\r\n    this.mount.appendChild(renderer.domElement);\r\n  }\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n    if (this.innerView) {\r\n      this.innerViewControls && this.innerViewControls.update();\r\n    } else {\r\n      this.controls.update();\r\n    }\r\n    if (this.centerModelHelper) {\r\n      this.centerModelHelper.update();\r\n    }\r\n    TWEEN.update(); // 不要轻易去掉，渐变动画依赖该库\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  initControls = () => {\r\n    this.innerViewControls = new InnerViewControls(this.camera);\r\n    this.innerViewControls.connect();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mount.removeChild(this.renderer.domElement)\r\n  }\r\n\r\n  render() {\r\n    // TODO test redux state\r\n    console.log('redux.data.live_configure', this.props.live_configure);\r\n    return (\r\n      <FullScreen\r\n        enabled={this.state.isFullScreen}\r\n        onChange={isFull => this.setState({ isFullScreen: isFull })}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '100vw', height: '100vh',\r\n            background: '#888', overflow: \"hidden\"\r\n          }}\r\n        >\r\n          <div\r\n            id=\"canvas\"\r\n            style={{ width: '100%', height: '100%', background: '#888' }}\r\n            ref={(mount) => { this.mount = mount }}\r\n          >\r\n          </div>\r\n          {\r\n            this.state.showingEffect ?\r\n              <EffectContainer\r\n                data={this.state.effectData}\r\n                onCloseClickHandler={() => {\r\n                  this.setState({\r\n                    effectData: null\r\n                  })\r\n                }}\r\n              ></EffectContainer>\r\n              :\r\n              \"\"\r\n          }\r\n          <video id=\"video\"\r\n            style={{ display: \"none\" }}\r\n            ref={(mount) => { this.videoNode = mount }} >\r\n          </video>\r\n          <div\r\n            id=\"display\"\r\n            style={{ display: \"none\" }}>\r\n          </div>\r\n        </div>\r\n      </FullScreen >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state.basic,\r\n  { fetchLiveConfigure }\r\n)(Player);","import { combineReducers } from 'redux';\r\nimport { basic } from './redux/basic.redux';\r\nconst rootReducer = combineReducers({\r\n    basic\r\n});\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';        // 中间件，用来处理异步数据\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n);\r\nexport default store;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Player from './Player';\r\nimport { Provider } from 'react-redux' // https://react-redux.js.org/api/connect\r\nimport store from './store';\r\n\r\nconst XRPlayer = () => (\r\n    <Provider store={store}>\r\n        <Player />\r\n    </Provider>\r\n)\r\n\r\nexport default XRPlayer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport XRPlayer from '../../src/index';\r\n\r\n\r\nReactDOM.render(\r\n    <XRPlayer />,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}